
Tokenisation
============
00-2F		Identifier characters
30-3F		Unused
40-7F 		Short constants 0-63
80-F7		Tokens ($80 = EOL, also includes "")
F8-F9		Token shifts (total possible tokens 358 ; following must be 81-F7, possible cascade)
FA			Reserved
FB nn		String, length nn (total data nn+2)
FC nn		Arbitrary Data, size nn (total data nn+2)
FD 			Reserved
FE nn 		Integer constant (8 bit)
FF ll hh	Integer constant (16 bit)

Note, tokenising is done in chunks so FORI=1TO10 would be FORI = 1 TO10

Token control bytes
===================
$10-$17 	binary operator 0-7
$40 		unary function
$80 		command decrements structure count
$81 		command
$82 		command increments structure count

Math stack (6 bytes/stack level)
================================

Status 	$80 	Integer (0) Float (1)
		$40 	Number (0) String (1)
		$01 	Reference

1 byte status

2 byte data address
	OR
2 byte string address
	OR
1 byte exponent 4 byte mantissa

Program Storage
===============
+00		Offset to next / 0 end of program
+01 	LSB line #
+02 	MSB line #
+03 	First token.

